{
  "openapi": "3.0.1",
  "info": {
    "title": "api",
    "version": ""
  },
  "paths": {
    "/v1/balance/": {
      "get": {
        "description": "Get account balance showing available balance and pending charges",
        "operationId": "balance_getBalance",
        "tags": [
          "Balance"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balance"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/categories/": {
      "post": {
        "description": "Create a new category",
        "operationId": "categories_createCategory",
        "tags": [
          "Categories"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "409": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all categories for the authenticated user",
        "operationId": "categories_listCategories",
        "tags": [
          "Categories"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/categories/{category_id}": {
      "get": {
        "description": "Get a specific category by ID",
        "operationId": "categories_getCategory",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of the category",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "description": "Update an existing category",
        "operationId": "categories_updateCategory",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of the category to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": ""
          },
          "409": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a category (this will also remove all transcription associations)",
        "operationId": "categories_deleteCategory",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of the category to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns success message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/categories/{category_id}/transcriptions": {
      "post": {
        "description": "Add a transcription to a category",
        "operationId": "categories_addTranscriptionToCategory",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of the category",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns success message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTranscriptionToCategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTranscriptionToCategoryRequest"
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all transcriptions in a specific category",
        "operationId": "categories_getCategoryTranscriptions",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of the category",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryTranscription"
                  }
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/categories/{category_id}/transcriptions/{transcription_id}": {
      "delete": {
        "description": "Remove a transcription from a category",
        "operationId": "categories_removeTranscriptionFromCategory",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of the category",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "transcription_id",
            "in": "path",
            "description": "ID of the transcription to remove",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns success message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveTranscriptionFromCategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/categories/by-transcription/{transcription_id}": {
      "get": {
        "description": "Get all categories for a specific transcription",
        "operationId": "categories_getTranscriptionCategories",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "transcription_id",
            "in": "path",
            "description": "ID of the transcription",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/health/": {
      "get": {
        "operationId": "health_getHealth",
        "tags": [
          "Health"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        },
        "summary": "Get health status"
      }
    },
    "/v1/link/extract": {
      "post": {
        "operationId": "link_extract",
        "tags": [
          "Link"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkResponse"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Extract download link from a given URL",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkRequest"
              }
            }
          }
        }
      }
    },
    "/v1/link/sites": {
      "get": {
        "operationId": "link_get-supported-sites",
        "tags": [
          "Link"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            }
          }
        },
        "summary": "Get supported sites"
      }
    },
    "/v1/transcriptions/": {
      "post": {
        "description": "Create a new transcription",
        "operationId": "transcribe_createTranscription",
        "tags": [
          "Transcribe"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The unique identifier for the newly created transcription.\nUse this ID to check the status of the transcription or to retrieve the transcription result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionId"
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscriptionRequest"
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all transcriptions for the authenticated user",
        "operationId": "transcribe_listTranscriptions",
        "tags": [
          "Transcribe"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TranscriptionSummary"
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/transcriptions/batch": {
      "post": {
        "description": "Create multiple transcriptions to be processed in batch",
        "operationId": "transcribe_createBatchTranscription",
        "tags": [
          "Transcribe"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Information about the created batch including batch ID and individual transcription IDs.\nAll transcriptions will be processed sequentially with delays between them.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchTranscriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchTranscriptionRequest"
              }
            }
          }
        }
      }
    },
    "/v1/transcriptions/batch/{batch_id}/status": {
      "get": {
        "description": "Get status of a batch transcription",
        "operationId": "transcribe_getBatchStatus",
        "tags": [
          "Transcribe"
        ],
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "description": "ID of the batch. Use the ID returned from the Create Batch Transcription endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/transcriptions/{transcription_id}/status": {
      "get": {
        "description": "Get transcription status",
        "operationId": "transcribe_getTranscriptionStatus",
        "tags": [
          "Transcribe"
        ],
        "parameters": [
          {
            "name": "transcription_id",
            "in": "path",
            "description": "ID of the transcription. Use the ID returned from the Create Transcription endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
            "examples": {
              "Example1": {
                "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionInfo"
                },
                "examples": {
                  "Example1": {
                    "value": {
                      "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "title": "My Shiur Transcription",
                      "created_at": "2024-01-15T09:30:00Z",
                      "primary_language": "en",
                      "hebrew_word_format": [
                        "en",
                        "he"
                      ],
                      "num_speakers": 1,
                      "status": "COMPLETED",
                      "duration": 1802.5,
                      "model": "v1"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/transcriptions/{transcription_id}": {
      "get": {
        "description": "Get transcription",
        "operationId": "transcribe_getTranscription",
        "tags": [
          "Transcribe"
        ],
        "parameters": [
          {
            "name": "transcription_id",
            "in": "path",
            "description": "ID of the transcription. Use the ID returned from the Create Transcription endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
            "examples": {
              "Example1": {
                "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transcription"
                },
                "examples": {
                  "Example1": {
                    "value": {
                      "text": "Welcome to today's <i>shiur</i> שיעור. We will discuss the <i>halacha</i> הלכה regarding...",
                      "timestamps": [
                        {
                          "word": "Welcome",
                          "hebrew_word_format": null,
                          "start": 0,
                          "end": 0.5,
                          "speaker": "1"
                        },
                        {
                          "word": "shiur",
                          "hebrew_word_format": [
                            "en"
                          ],
                          "start": 2.1,
                          "end": 2.8,
                          "speaker": "1"
                        }
                      ],
                      "info": {
                        "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "title": "My Shiur Transcription",
                        "created_at": "2024-01-15T09:30:00Z",
                        "primary_language": "en",
                        "hebrew_word_format": [
                          "en",
                          "he"
                        ],
                        "num_speakers": 1,
                        "status": "COMPLETED",
                        "duration": 1802.5,
                        "model": "v1"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Balance": {
        "title": "Balance",
        "type": "object",
        "properties": {
          "total_balance": {
            "type": "integer",
            "description": "The total balance in the account, not subtracting pending charges, represented in cents."
          },
          "available_balance": {
            "type": "integer",
            "description": "The available balance after accounting for pending charges, represented in cents. This is the amount that can be used for new transcriptions."
          },
          "pending_balance": {
            "type": "integer",
            "description": "The amount of pending charges from transcriptions that are in progress or queued, represented in cents."
          },
          "all_time_deposits": {
            "type": "integer",
            "description": "The total amount ever deposited into the account, represented in cents."
          },
          "all_time_spend": {
            "type": "integer",
            "description": "The total amount ever spent on completed transcriptions, represented in cents."
          }
        },
        "required": [
          "total_balance",
          "available_balance",
          "pending_balance",
          "all_time_deposits",
          "all_time_spend"
        ]
      },
      "CreateCategoryRequest": {
        "title": "CreateCategoryRequest",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the category"
          },
          "color_hex": {
            "type": "string",
            "nullable": true,
            "description": "Hex color code for the category (e.g.,"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateCategoryRequest": {
        "title": "UpdateCategoryRequest",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "description": "New name for the category"
          },
          "color_hex": {
            "type": "string",
            "nullable": true,
            "description": "New hex color code for the category (e.g.,"
          }
        }
      },
      "AddTranscriptionToCategoryRequest": {
        "title": "AddTranscriptionToCategoryRequest",
        "type": "object",
        "properties": {
          "transcription_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the transcription to add to the category"
          },
          "position": {
            "type": "integer",
            "nullable": true,
            "description": "Optional position within the category for ordering"
          }
        },
        "required": [
          "transcription_id"
        ]
      },
      "Category": {
        "title": "Category",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the category"
          },
          "name": {
            "type": "string",
            "description": "Name of the category"
          },
          "color_hex": {
            "type": "string",
            "description": "Hex color code for the category"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the category was created"
          },
          "transcription_count": {
            "type": "integer",
            "nullable": true,
            "description": "Number of transcriptions in this category"
          }
        },
        "required": [
          "id",
          "name",
          "color_hex",
          "created_at"
        ]
      },
      "CategoryTranscription": {
        "title": "CategoryTranscription",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the transcription"
          },
          "title": {
            "type": "string",
            "description": "Title of the transcription"
          },
          "status": {
            "type": "string",
            "description": "Current status of the transcription"
          },
          "position": {
            "type": "integer",
            "nullable": true,
            "description": "Position of this transcription within the category"
          }
        },
        "required": [
          "id",
          "title",
          "status"
        ]
      },
      "DeleteCategoryResponse": {
        "title": "DeleteCategoryResponse",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "deleted_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the deleted category"
          }
        },
        "required": [
          "message",
          "deleted_id"
        ]
      },
      "AddTranscriptionToCategoryResponse": {
        "title": "AddTranscriptionToCategoryResponse",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "category_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the category"
          },
          "transcription_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the transcription"
          }
        },
        "required": [
          "message",
          "category_id",
          "transcription_id"
        ]
      },
      "RemoveTranscriptionFromCategoryResponse": {
        "title": "RemoveTranscriptionFromCategoryResponse",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "category_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the category"
          },
          "transcription_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the transcription"
          }
        },
        "required": [
          "message",
          "category_id",
          "transcription_id"
        ]
      },
      "HealthResponse": {
        "title": "HealthResponse",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Health status"
          }
        },
        "required": [
          "status"
        ]
      },
      "LinkRequest": {
        "title": "LinkRequest",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to extract a downloadable link from. This link must originate from a supported site. You can use the get supported sites endpoint to get a list of supported sites."
          }
        },
        "required": [
          "url"
        ]
      },
      "LinkResponse": {
        "title": "LinkResponse",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the file"
          },
          "download_url": {
            "type": "string",
            "description": "Download URL of the file"
          },
          "file_format": {
            "type": "string",
            "description": "Format of the file"
          },
          "file_name": {
            "type": "string",
            "description": "Name of the file"
          }
        },
        "required": [
          "title",
          "download_url",
          "file_format",
          "file_name"
        ]
      },
      "Site": {
        "title": "Site",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the site"
          },
          "url": {
            "type": "string",
            "description": "URL of the site"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "AudioChunk": {
        "title": "AudioChunk",
        "type": "object",
        "description": "Binary chunk of PCM audio streamed from the client.",
        "properties": {
          "data": {
            "type": "string",
            "description": "PCM audio data chunk"
          },
          "mime_type": {
            "type": "string"
          }
        },
        "required": [
          "data",
          "mime_type"
        ]
      },
      "TranscriptChunk": {
        "title": "TranscriptChunk",
        "type": "object",
        "description": "Partial (or final) transcript text streamed from server.",
        "properties": {
          "text": {
            "type": "string"
          }
        },
        "required": [
          "text"
        ]
      },
      "TranscriptionRequest": {
        "title": "TranscriptionRequest",
        "type": "object",
        "properties": {
          "audio_url": {
            "type": "string",
            "nullable": true,
            "description": "URL to a downloadable audio file. Must be a direct link to the file (not a streaming or preview link). If the URL is not directly downloadable, consider using our Link API to extract a downloadable link from supported sites. Either audio_url or audio_file must be provided, but not both."
          },
          "audio_file": {
            "type": "string",
            "nullable": true,
            "description": "Base64 encoded audio file content. Either audio_url or audio_file must be provided, but not both.\n\n## Base64 Encoding Example\n\n**Python:**\n```python\nimport base64\nfrom soferai import SoferAI\n\n# Initialize client\nclient = SoferAI(api_key=\"your_api_key_here\")\n\n# Read and encode audio file\nwith open(\"audio.mp3\", \"rb\") as f:\n    base64_audio = base64.b64encode(f.read()).decode('utf-8')\n\n# Create transcription request\nresponse = client.transcribe.create_transcription(\n    audio_file=base64_audio,\n    info={\n        \"model\": \"v1\",\n        \"primary_language\": \"en\",\n        \"hebrew_word_format\": [\"he\"],\n        \"title\": \"My Shiur Transcription\"\n    }\n)\n\nprint(f\"Transcription ID: {response}\")\n```"
          },
          "info": {
            "$ref": "#/components/schemas/TranscriptionRequestInfo",
            "description": "Transcription parameters"
          }
        },
        "required": [
          "info"
        ]
      },
      "BatchTranscriptionRequest": {
        "title": "BatchTranscriptionRequest",
        "type": "object",
        "properties": {
          "audio_sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudioSource"
            },
            "description": "List of audio sources to transcribe with the same settings. Each item should have either audio_url or audio_file."
          },
          "info": {
            "$ref": "#/components/schemas/TranscriptionRequestInfo",
            "description": "Shared transcription parameters for all audio files in the batch"
          },
          "batch_title": {
            "type": "string",
            "nullable": true,
            "description": "Optional title for the batch. The system will first check for a title in the Audio Source itself. If no title is provided there, it defaults to batch title providded here with \"- Batch Item N\" appended."
          },
          "batch_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Optional ID for the batch. If not provided, a UUID will be generated."
          }
        },
        "required": [
          "audio_sources",
          "info"
        ]
      },
      "BatchTranscriptionResponse": {
        "title": "BatchTranscriptionResponse",
        "type": "object",
        "properties": {
          "batch_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the batch"
          },
          "transcription_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscriptionId"
            },
            "description": "List of transcription IDs that were created for this batch"
          },
          "total_count": {
            "type": "integer",
            "description": "Total number of transcriptions in the batch"
          },
          "status": {
            "$ref": "#/components/schemas/BatchStatus",
            "description": "Current status of the batch"
          }
        },
        "required": [
          "batch_id",
          "transcription_ids",
          "total_count",
          "status"
        ]
      },
      "BatchStatusResponse": {
        "title": "BatchStatusResponse",
        "type": "object",
        "properties": {
          "batch_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the batch"
          },
          "status": {
            "$ref": "#/components/schemas/BatchStatus",
            "description": "Current status of the batch"
          },
          "total_count": {
            "type": "integer",
            "description": "Total number of transcriptions in the batch"
          },
          "completed_count": {
            "type": "integer",
            "description": "Number of transcriptions that have completed successfully"
          },
          "failed_count": {
            "type": "integer",
            "description": "Number of transcriptions that have failed"
          },
          "pending_count": {
            "type": "integer",
            "description": "Number of transcriptions still pending or processing"
          },
          "transcriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscriptionInfo"
            },
            "description": "List of transcription statuses in the batch"
          }
        },
        "required": [
          "batch_id",
          "status",
          "total_count",
          "completed_count",
          "failed_count",
          "pending_count",
          "transcriptions"
        ]
      },
      "BatchStatus": {
        "title": "BatchStatus",
        "type": "string",
        "enum": [
          "RECEIVED",
          "PROCESSING",
          "COMPLETED",
          "FAILED"
        ]
      },
      "Language": {
        "title": "Language",
        "type": "string",
        "enum": [
          "en",
          "he",
          "yi"
        ]
      },
      "LettersLanguage": {
        "title": "LettersLanguage",
        "type": "string",
        "enum": [
          "en",
          "he"
        ]
      },
      "TranscriptionId": {
        "title": "TranscriptionId",
        "type": "string",
        "format": "uuid",
        "description": "ID of the transcription"
      },
      "Status": {
        "title": "Status",
        "type": "string",
        "enum": [
          "RECEIVED",
          "PENDING",
          "PROCESSING",
          "COMPLETED",
          "CANCELLED",
          "FAILED",
          "UPLOADED",
          "INSUFFICIENT_FUNDS"
        ]
      },
      "TranscriptionRequestInfo": {
        "title": "TranscriptionRequestInfo",
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "nullable": true,
            "description": "Model to be used for the transcription. Default is \"v1\".\n- v1: Our latest and most accurate model, especially for audio with longer stretches of Hebrew.\nPriced at 1.20 USD per hour of audio transcribed.\n- v0: Not generally recommended. Cheaper, but less accurate.\nPriced at 1.00 USD per hour."
          },
          "id": {
            "$ref": "#/components/schemas/TranscriptionId",
            "nullable": true,
            "description": "ID of the transcription. If passed, it will be set as the ID. If not, a UUID will be generated."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "Title for the transcription, Default is \"Untitled\""
          },
          "primary_language": {
            "$ref": "#/components/schemas/Language",
            "nullable": true,
            "description": "Specifies the primary language spoken in the audio content. Default is English.\n- en: English\n- he: Hebrew\n- yi: Yiddish"
          },
          "hebrew_word_format": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LettersLanguage"
            },
            "nullable": true,
            "description": "Relevant only if the primary language is English. This setting determines how non-English word, are formatted in the transcription.\n- To include Hebrew words in their original Hebrew letters, specify \"he\".\n- To transliterate Hebrew words into English letters, specify \"en\".\n- If both \"he\" and \"en\" are specified, each Hebrew word will be provided in both formats, with the transliteration in <i> tags.\n- If the primary language is English, the default is to include both English transliteration and original Hebrew letters (\"en\" and \"he\").\n- If the primary language is not English, the default and only option is to include Hebrew words in their original Hebrew letters (\"he\")."
          },
          "num_speakers": {
            "type": "integer",
            "nullable": true,
            "description": "Expected number of speakers in the audio. Default is 1. If a number more than 1 is passed, it will be used for speaker labeling (a pro feature)."
          }
        }
      },
      "TranscriptionInfo": {
        "title": "TranscriptionInfo",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/TranscriptionId",
            "description": "ID of the transcription"
          },
          "title": {
            "type": "string",
            "description": "Title of the transcription",
            "example": "My Shiur Transcription"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the transcription was created",
            "example": "2024-01-15T09:30:00Z"
          },
          "primary_language": {
            "$ref": "#/components/schemas/Language",
            "description": "The primary language of the audio content, which can be English (en), Hebrew (he), or Yiddish (yi)."
          },
          "hebrew_word_format": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LettersLanguage"
            },
            "description": "Indicates how Hebrew words are transcribed in the response when the primary language is English.\n- Hebrew words are in Hebrew letters if \"he\" is specified.\n- Hebrew words are transliterated into English letters if \"en\" is specified.\n- If both \"he\" and \"en\" are specified, both versions are provided back-to-back for each Hebrew word.\nTransliterated Hebrew words are surrounded by <i> tags in the response text."
          },
          "num_speakers": {
            "type": "integer",
            "description": "Number of speakers in the audio. If more than 1, then speaker labeling is enabled (a pro feature).",
            "example": 1
          },
          "status": {
            "$ref": "#/components/schemas/Status",
            "description": "Current status of the transcription"
          },
          "duration": {
            "type": "integer",
            "format": "float",
            "nullable": true,
            "description": "Duration of the audio in seconds. If None, it means the duration was not calculated yet."
          },
          "model": {
            "type": "string",
            "nullable": true,
            "description": "Model used for the transcription. V1 is the latest and most accurate model, especially for audio with longer stretches of Hebrew. V0 is suitable for audio with fewer Hebrew words."
          }
        },
        "required": [
          "id",
          "title",
          "created_at",
          "primary_language",
          "hebrew_word_format",
          "num_speakers",
          "status"
        ]
      },
      "Transcription": {
        "title": "Transcription",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "This field contains the transcription text. If the `primary_language` is English and only one `hebrew_word_format` is specified, the text will be in English with Hebrew words in the specified format. If multiple `hebrew_word_format` options are set, Hebrew words will appear in both formats, with the English transliteration in <i>Italics</i>. If the primary language is Hebrew, the text will be in Hebrew.",
            "example": "Welcome to today's <i>shiur</i> שיעור. We will discuss the <i>halacha</i> הלכה regarding..."
          },
          "timestamps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Timestamp"
            },
            "nullable": true,
            "description": "Timestamps object for the transcription. See the `timestamps` object for more details."
          },
          "info": {
            "$ref": "#/components/schemas/TranscriptionInfo",
            "description": "Additional information about the transcription"
          }
        },
        "required": [
          "text",
          "info"
        ]
      },
      "Timestamp": {
        "title": "Timestamp",
        "type": "object",
        "properties": {
          "word": {
            "type": "string",
            "description": "Word"
          },
          "hebrew_word_format": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LettersLanguage"
            },
            "nullable": true,
            "description": "Specifies the format of Hebrew words in the transcription. Hebrew words are denoted as \"he\" for Hebrew letters or \"en\" for English transliteration. Non-Hebrew words are represented by null."
          },
          "start": {
            "type": "number",
            "format": "double",
            "description": "Start time of the timestamp"
          },
          "end": {
            "type": "number",
            "format": "double",
            "description": "End time of the timestamp"
          },
          "speaker": {
            "type": "string",
            "nullable": true,
            "description": "If speaker labeling was requested, indicates which speaker number spoke this word (Pro feature)"
          }
        },
        "required": [
          "word",
          "start",
          "end"
        ]
      },
      "UpdateTimestampsRequest": {
        "title": "UpdateTimestampsRequest",
        "type": "object",
        "properties": {
          "old_timestamps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Timestamp"
            },
            "description": "The original timestamps associated with the text before editing. These will be used as reference points to align the new timestamps."
          },
          "edited_text": {
            "type": "string",
            "description": "The modified version of the transcription text that needs updated timestamp alignments. This should be the complete text after your edits."
          },
          "language_to_update": {
            "$ref": "#/components/schemas/Language",
            "description": "Specifies which language version of the timestamps to update. Must be either 'en' for English or 'he' for Hebrew timestamps."
          }
        },
        "required": [
          "old_timestamps",
          "edited_text",
          "language_to_update"
        ]
      },
      "AudioSource": {
        "title": "AudioSource",
        "type": "object",
        "properties": {
          "audio_url": {
            "type": "string",
            "nullable": true,
            "description": "URL to a downloadable audio file. Either audio_url or audio_file must be provided, but not both."
          },
          "audio_file": {
            "type": "string",
            "nullable": true,
            "description": "Base64 encoded audio file content. Either audio_url or audio_file must be provided, but not both."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "An optional title for this specific audio file. If a title is not provided, the system will use the batch title followed by \"Batch Item i+1\". If neither a specific title nor a batch title is available, it will default to \"Batch Item i+1\". This ensures each audio file has a unique identifier within the batch."
          },
          "id": {
            "$ref": "#/components/schemas/TranscriptionId",
            "nullable": true,
            "description": "An optional UUID for this specific audio file. If an ID is not provided, the system will generate a UUID for the audio file."
          }
        }
      },
      "TranscriptionSummary": {
        "title": "TranscriptionSummary",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/TranscriptionId",
            "description": "ID of the transcription"
          },
          "title": {
            "type": "string",
            "description": "Title of the transcription"
          },
          "status": {
            "$ref": "#/components/schemas/Status",
            "description": "Current status of the transcription"
          }
        },
        "required": [
          "id",
          "title",
          "status"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.sofer.ai",
      "description": "Production"
    },
    {
      "url": "https://api-staging.sofer.ai",
      "description": "Staging"
    },
    {
      "url": "http://localhost:8001",
      "description": "Development"
    }
  ]
}
