{
  "openapi": "3.0.1",
  "info": {
    "title": "api",
    "version": ""
  },
  "paths": {
    "/v1/health/": {
      "get": {
        "operationId": "health_getHealth",
        "tags": [
          "Health"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        },
        "summary": "Get health status"
      }
    },
    "/v1/link/extract": {
      "post": {
        "operationId": "link_extract",
        "tags": [
          "Link"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkResponse"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Extract download link from a given URL",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkRequest"
              }
            }
          }
        }
      }
    },
    "/v1/link/sites": {
      "get": {
        "operationId": "link_get-supported-sites",
        "tags": [
          "Link"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            }
          }
        },
        "summary": "Get supported sites"
      }
    },
    "/v1/transcriptions/": {
      "post": {
        "description": "Create a new transcription",
        "operationId": "transcribe_createTranscription",
        "tags": [
          "Transcribe"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionId"
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscriptionRequest"
              }
            }
          }
        }
      }
    },
    "/v1/transcriptions/{transcription_id}/status": {
      "get": {
        "description": "Get transcription status",
        "operationId": "transcribe_getTranscriptionStatus",
        "tags": [
          "Transcribe"
        ],
        "parameters": [
          {
            "name": "transcription_id",
            "in": "path",
            "description": "ID of the transcription",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionInfo"
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/transcriptions/{transcription_id}": {
      "get": {
        "description": "Get transcription",
        "operationId": "transcribe_getTranscription",
        "tags": [
          "Transcribe"
        ],
        "parameters": [
          {
            "name": "transcription_id",
            "in": "path",
            "description": "ID of the transcription",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transcription"
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/transcriptions/update-timestamps": {
      "post": {
        "description": "Update the timestamps based on edited text. Updates one language at a time.",
        "operationId": "transcribe_updateTranscriptionTimestamps",
        "tags": [
          "Transcribe"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Timestamp"
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "429": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTimestampsRequest"
              }
            }
          }
        }
      }
    },
    "/v1/usage/{user_id}": {
      "get": {
        "description": "Get usage info",
        "operationId": "usage_getUsage",
        "tags": [
          "Usage"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usage"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "title": "HealthResponse",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Health status"
          }
        },
        "required": [
          "status"
        ]
      },
      "LinkRequest": {
        "title": "LinkRequest",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to extract the download link from"
          }
        },
        "required": [
          "url"
        ]
      },
      "LinkResponse": {
        "title": "LinkResponse",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the file"
          },
          "download_url": {
            "type": "string",
            "description": "Download URL of the file"
          },
          "file_format": {
            "type": "string",
            "description": "Format of the file"
          },
          "file_name": {
            "type": "string",
            "description": "Name of the file"
          }
        },
        "required": [
          "title",
          "download_url",
          "file_format",
          "file_name"
        ]
      },
      "Site": {
        "title": "Site",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the site"
          },
          "url": {
            "type": "string",
            "description": "URL of the site"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "TranscriptionRequest": {
        "title": "TranscriptionRequest",
        "type": "object",
        "properties": {
          "audio_url": {
            "type": "string",
            "nullable": true,
            "description": "URL to a downloadable audio file. Must be a direct link to the file (not a streaming or preview link). Either audio_url or audio_file must be provided, but not both."
          },
          "audio_file": {
            "type": "string",
            "nullable": true,
            "description": "Base64 encoded audio file content. Either audio_url or audio_file must be provided, but not both."
          },
          "info": {
            "$ref": "#/components/schemas/TranscriptionRequestInfo",
            "description": "Transcription parameters"
          }
        },
        "required": [
          "info"
        ]
      },
      "Language": {
        "title": "Language",
        "type": "string",
        "enum": [
          "en",
          "he",
          "yi"
        ]
      },
      "LettersLanguage": {
        "title": "LettersLanguage",
        "type": "string",
        "enum": [
          "en",
          "he"
        ]
      },
      "TranscriptionId": {
        "title": "TranscriptionId",
        "type": "string",
        "format": "uuid",
        "description": "ID of the transcription"
      },
      "Status": {
        "title": "Status",
        "type": "string",
        "enum": [
          "RECEIVED",
          "PENDING",
          "PROCESSING",
          "COMPLETED",
          "CANCELLED",
          "FAILED"
        ]
      },
      "TranscriptionRequestInfo": {
        "title": "TranscriptionRequestInfo",
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "nullable": true,
            "description": "Model to use for the transcription. Default is \"v1\", our newest model. Can also pass \"v0\", our original model."
          },
          "id": {
            "$ref": "#/components/schemas/TranscriptionId",
            "nullable": true,
            "description": "ID of the transcription"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "ID of the user. If you want the transcription to be associated with your Sofer.Ai account pass your user_id."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "Title of the transcription"
          },
          "primary_language": {
            "$ref": "#/components/schemas/Language",
            "nullable": true,
            "description": "Primary language of the audio content"
          },
          "lang_for_hebrew_words": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LettersLanguage"
            },
            "nullable": true,
            "description": "Specifies how Hebrew words should be transcribed when the primary language is English. - If you want Hebrew words in Hebrew letters, include \"he\". - If you want Hebrew words transliterated into English letters, include \"en\". - If you include both \"he\" and \"en\", you will receive both versions back-to-back for each Hebrew word. Transliterated Hebrew words will be surrounded by <i> tags in the text."
          },
          "num_speakers": {
            "type": "integer",
            "nullable": true,
            "description": "Expected number of speakers in the audio"
          }
        }
      },
      "TranscriptionInfo": {
        "title": "TranscriptionInfo",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/TranscriptionId",
            "description": "ID of the transcription"
          },
          "title": {
            "type": "string",
            "description": "Title of the transcription"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the transcription was created"
          },
          "primary_language": {
            "$ref": "#/components/schemas/Language",
            "description": "Primary language of the audio content"
          },
          "lang_for_hebrew_words": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LettersLanguage"
            },
            "description": "Languages used for Hebrew words in the transcription"
          },
          "num_speakers": {
            "type": "integer",
            "description": "Number of speakers in the audio"
          },
          "status": {
            "$ref": "#/components/schemas/Status",
            "description": "Current status of the transcription"
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the audio in seconds"
          },
          "model": {
            "type": "string",
            "nullable": true,
            "description": "Model used for the transcription"
          }
        },
        "required": [
          "id",
          "title",
          "created_at",
          "primary_language",
          "lang_for_hebrew_words",
          "num_speakers",
          "status",
          "duration"
        ]
      },
      "Transcription": {
        "title": "Transcription",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Transcription text. if the `primary_language` was English and only one `lang_for_hebrew_words` was specified, \nthis is just the English text with whatever language for the words you specified.\nIf you set multiple `lang_for_hebrew_words`,\nthis is the text with Hebrew words, with the English text in <i>Italics</i> markup. \nIf primary language is Hebrew, this is just the Hebrew text."
          },
          "timestamps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Timestamp"
            },
            "nullable": true,
            "description": "Timestamps for the transcription text"
          },
          "info": {
            "$ref": "#/components/schemas/TranscriptionInfo",
            "description": "Additional information about the transcription"
          }
        },
        "required": [
          "text",
          "info"
        ]
      },
      "Timestamp": {
        "title": "Timestamp",
        "type": "object",
        "properties": {
          "word": {
            "type": "string",
            "description": "Word"
          },
          "punctuated_word": {
            "type": "string",
            "nullable": true,
            "description": "Punctuated word"
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LettersLanguage"
            },
            "nullable": true,
            "description": "The language(s) for which this timestamp applies. If a word appears in both language versions, this field will include both \"he\" and \"en\". If the word is written in Hebrew letters, it will only have \"he\". If the word is transliterated into English letters, it will only have \"en\"."
          },
          "start": {
            "type": "number",
            "format": "double",
            "description": "Start time of the timestamp"
          },
          "end": {
            "type": "number",
            "format": "double",
            "description": "End time of the timestamp"
          },
          "speaker": {
            "type": "string",
            "nullable": true,
            "description": "Speaker (Pro feature)"
          }
        },
        "required": [
          "word",
          "start",
          "end"
        ]
      },
      "UpdateTimestampsRequest": {
        "title": "UpdateTimestampsRequest",
        "type": "object",
        "properties": {
          "old_timestamps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Timestamp"
            },
            "description": "The original timestamps associated with the text before editing. These will be used as reference points to align the new timestamps."
          },
          "edited_text": {
            "type": "string",
            "description": "The modified version of the transcription text that needs updated timestamp alignments. This should be the complete text after your edits."
          },
          "language_to_update": {
            "$ref": "#/components/schemas/Language",
            "description": "Specifies which language version of the timestamps to update. Must be either 'en' for English or 'he' for Hebrew timestamps."
          }
        },
        "required": [
          "old_timestamps",
          "edited_text",
          "language_to_update"
        ]
      },
      "Usage": {
        "title": "Usage",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user"
          },
          "seconds_remaining": {
            "type": "integer",
            "format": "float",
            "description": "Seconds remaining for the user"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "ID of the organization the user belongs to"
          }
        },
        "required": [
          "id",
          "seconds_remaining"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.sofer.ai",
      "description": "Production"
    },
    {
      "url": "https://api-staging.sofer.ai",
      "description": "Staging"
    },
    {
      "url": "http://localhost:8001",
      "description": "Development"
    }
  ]
}
